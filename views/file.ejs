<!DOCTYPE html>
<html>
<head>
    <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>

    <% include templates/header.ejs %>

    <!-- Page Content -->
    <div class="container">
        <div class="row">
            <div class="starter-template">
                <h1>View Contributions By File</h1>
                <br>
                <br>
                <h3>Enter the filepath of the file you want to inspect below.</h3>
                <br>
                <form action="/file/filepath" method="post">
                    <input type="text" name="filepath"/> <input type="submit" value="Submit">
                </form>
                <br>
                <form>
                    <label><input type="radio" name="dataset" id="dataset" value="num_commits" checked> Number Of Commits</label>
                    <br>
                    <label><input type="radio" name="dataset" id="dataset" value="option1"> Additions / Deletions</label>
                </form>
                <br>
                <div id="bar-chart"></div>
                <br><br><br>
                <h1>See history of edits for a specific code chunk</h1>
                <br>
                <form action="/file/codechunk" method="post">
                    From Line : <input type="number" name="linestart"/> to <input type="number" name="lineend"/> <input type="submit" value="Submit">
                </form>
                
                <% if (showHistory == true) { %>
                <br><br>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>Author</th>
                                <th>Date</th>
                                <th>Commit Message</th>
                                <th>No. of Additions</th>
                                <th>No. of Deletions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% console.log("Inside html editHistory: ", editHistoryArray) %>
                            <% for (var i = 0; i < editHistoryArray.length; i++) { %>
                            <tr> 
                                <td><%= i + 1 %></td>
                                <td><%= editHistoryArray[i].author %></td>
                                <td><%= editHistoryArray[i].date %></td>
                                <td><%= editHistoryArray[i].msg %></td>
                                <td><%= editHistoryArray[i].addition %></td>
                                <td><%= editHistoryArray[i].deletion %></td>
                            </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <% } %>

                <script src="http://d3js.org/d3.v3.min.js"></script>
                <script>

                    datasetNumCommits = <%-JSON.stringify(datasetNumCommits)%>
                    datasetAddDelete = <%-JSON.stringify(datasetAddDelete)%>
                    
                    console.log("Array Inside EJS: ", datasetNumCommits)

                    /*
                    datasetTotal = [
                        {label:"Category 1", value:19},
                        {label:"Category 2", value:5},
                        {label:"Category 3", value:13},
                        {label:"Category 4", value:17},
                        {label:"Category 5", value:21},
                        {label:"Category 6", value:25}
                    ]; 
                    */

                    datasetOption1 = [
                        {label:"Category 1", value:22},
                        {label:"Category 2", value:33},
                        {label:"Category 3", value:4},
                        {label:"Category 4", value:15},
                        {label:"Category 5", value:36},
                        {label:"Category 6", value:0}
                    ];

                    datasetOption2 = [
                        {label:"Category 1", value:10},
                        {label:"Category 2", value:20},
                        {label:"Category 3", value:30},
                        {label:"Category 4", value:5},
                        {label:"Category 5", value:12},
                        {label:"Category 6", value:23}
                    ];

                    d3.selectAll("input").on("change", selectDataset);

                    function selectDataset() {

                        var value = this.value;
                        if (value == "num_commits")
                        {
                            change(datasetNumCommits);
                        }
                        else if (value == "option1")
                        {
                            change(datasetOption1);
                        }
                    }

                    var barHeight = 40
                    var margin = {
                        top: 10, 
                        right: 100, 
                        bottom: 10, 
                        left: 100,
                    },
                    
                    width = parseInt(d3.select('body').style('width'), 10) - margin.left - margin.right,
                    height = parseInt(d3.select('body').style('height'), 10) - margin.top - margin.bottom;

                    var div = d3.select("#bar-chart").append("div").attr("class", "toolTip");

                    //var formatPercent = d3.format("");

                    var y = d3.scale.ordinal()
                            .rangeRoundBands([height, 0], .2, 0.5);

                    var x = d3.scale.linear()
                            .range([0, width]);

                    var xAxis = d3.svg.axis()
                            .scale(x)
                            .tickSize(-height)
                            .orient("bottom");

                    var yAxis = d3.svg.axis()
                            .scale(y)
                            .orient("left");
                    //.tickFormat(formatPercent);

                    var svg = d3.select("#bar-chart").append("svg")
                            .attr("width", width + margin.left + margin.right)
                            .attr("height", height + margin.top + margin.bottom)

                    var svgGroup = svg.append("g")
                                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                    svg.append("g")
                            .attr("class", "x axis")
                            .attr("width", 50)
                            .attr("transform", "translate(0," + height + ")")
                            .call(xAxis);

                    d3.select("input[value=\"total\"]").property("checked", true);
                    change(datasetNumCommits);

                    function change(dataset) {

                        // Get new svg chart height based on the number of dataset elements
                        var newChartHeight = dataset.length * barHeight - margin.top - margin.bottom

                        // Need to update domain and range for both x and y axes
                        y.domain(dataset.map(function(d) { return d.label; }))
                            .rangeRoundBands([newChartHeight, 0], .2, 0.5);

                        x.domain([0, d3.max(dataset, function(d) { return d.value; })]);

                        // Set chart to new height
                        svg.style("height", newChartHeight + margin.top + margin.bottom)

                        svg.append("g")
                                .attr("class", "x axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(xAxis)
                                .append("text")
                                .attr("x", 350)
                                .attr("y", 28)
                                .text("Num Of Commits");

                        svg.select(".y.axis").remove();
                        svg.select(".x.axis").remove();

                        svg.append("g")
                                .attr("class", "y axis")
                                .attr("height", 50)
                                .call(yAxis)
                                .append("text")
                                .attr("transform", "rotate(0)")
                                .attr("x", 50)
                                .attr("dx", ".1em")
                                .style("text-anchor", "end")
                                .text("Authors");


                        var bar = svg.selectAll(".bar")
                                .data(dataset, function(d) { return d.label; });

                        // new data:
                        bar.enter().append("rect")
                                .attr("class", "bar")
                                .attr("x", function(d) { return x(d.value); })
                                .attr("y", function(d) { return y(d.label); })
                                .attr("width", function(d) { return width-x(d.value); })
                                .attr("height", y.rangeBand());

                        if (dataset == datasetNumCommits) {
                            bar
                                .on("mousemove", function(d){
                                    div.style("left", d3.event.pageX+10+"px");
                                    div.style("top", d3.event.pageY-25+"px");
                                    div.style("display", "inline-block");
                                    div.html((d.label)+"<br><br>"+"Num. of Commits:  " + (d.value));
                                });    
                        } else {
                            bar
                                .on("mousemove", function(d){
                                    div.style("left", d3.event.pageX+10+"px");
                                    div.style("top", d3.event.pageY-25+"px");
                                    div.style("display", "inline-block");
                                    div.html((d.label)+"<br>"+(d.value));
                                });
                        }
                        
                        bar
                                .on("mouseout", function(d){
                                    div.style("display", "none");
                                });


                        // removed data:
                        bar.exit().remove();

                        // updated data:
                        bar.transition()
                                .duration(750)
                                .attr("x", function(d) { return 0; })
                                .attr("y", function(d) { return y(d.label); })
                                .attr("width", function(d) { return x(d.value); })
                                .attr("height", y.rangeBand());
                    };

                </script>
            </div>
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container -->

</body>
</html>