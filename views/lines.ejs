<!DOCTYPE html>
<html>
<head>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <style>
      
    rect {
        shape-rendering: crispEdges;
    }

    text, .xAxis, .yAxis {
        font-size: 0.8em;
    }

    </style>
</head>
<body>

    <% include templates/header.ejs %>

    <!-- Page Content -->
    <div class="container">
        <div class="row">
            <div class="starter-template">
                <h1>Contribution by Lines</h1>

                <div id="chartByLines"></div>

            </div>
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container -->

<script>
var data = <%- JSON.stringify(data) %>;
</script>
<script src="https://d3js.org/d3.v4.min.js"></script>
<script>
(function(d3) {
'use strict';

var margin = {left:50, right:50, top:10, bottom:10};
var barWidth = 50;
var svgWidth = 600;
var svgHeight = data.length * barWidth;
var width = svgWidth - margin.left - margin.right;
var height = svgHeight - margin.top - margin.bottom;

var svg = d3.select('#chartByLines')
	.append("svg")
	.attr("width", svgWidth)
	.attr("height", svgHeight)
	.append("g")
	.attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

var x = d3.scaleLinear()
	.domain([0, d3.max(data.map( d => d.count))])
	.range([0, width]);

var y = d3.scaleBand()
	.domain(data.map( d => d.author ))
	.range([0, height])
	.padding(0.4);

// set the x axis
var yAxis = d3.axisLeft(y)
	.tickSize(0);

svg.append("g")
.attr("transform", "translate(0," + 0 + ")")
.attr('class','yAxis')
.call(yAxis);

d3.selectAll(".yAxis text")
.attr("transform", "translate(0," + 0 + ")");

var g = svg.append("g");

// render the bars
var bar = g.selectAll("g")
		.data(data)
		.enter().append('rect')
		.attr("x", 0)
		.attr("y", function(d) {return y(d.author)})
		.attr("width", function(d) {return x(d.count)})
		.attr("height", y.bandwidth())
		.attr("fill", (d,i) => i === 0 || i === 6 ? "#6baed6" : "#afafaf");
		
// render the line count next to the bar
var label = g.selectAll("g")
			.data(data)
			.enter().append("text")
			.text(d => d.count)
			.attr("x", function(d) {return x(d.count) + 15})
			.attr("y", function(d) {return y(d.author) + y.bandwidth()/2})
            .style("dominant-baseline", "middle")
			.style("text-anchor", "left");

})(window.d3);
</script>

</body>
</html>